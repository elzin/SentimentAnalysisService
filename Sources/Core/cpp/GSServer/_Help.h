/** \mainpage
<b>1. ОБЩИЕ СВЕДЕНИЯ</b>\n
Модуль GSServer предназначен для обеспечение доступа к глобальным настройкам системы \n
Модуль реализован на языке программирования MC++ с использованием инструментальных \n
средств из среды разработки Microsoft Visual Studio .Net, библиотеки framework. \n

<b>2. ФУНКЦИОНАЛЬНОЕ НАЗНАЧЕНИЕ</b>\n
Данный модуль решает следующие задачи:
\li	Запись и чтение различных типов глобальных параметров системы
\n

<b>3. ОПИСАНИЕ ЛОГИЧЕСКОЙ СТРУКТУРЫ</b>\n
Данный модуль предоставляет следующие интерфейсы:
\li	SS::Interface::Core::CommonServices::ISettingsServer чтение/запись параметров
\li -> SetWorkPath устанавливает текущую директорию
\li -> FlushToDisk Сбрасывает текущие настройки на диск
\li -> GetParameter вернет значение параметра, определяемого именем
\li -> GetBoolean вернет значение параметра, определяемого именем
\li -> GetInt вернет значение параметра, определяемого именем
\li -> GetUInt вернет значение параметра, определяемого именем
\li -> GetString вернет значение параметра, определяемого именем
\li -> GetInt64 вернет значение параметра, определяемого именем
\li -> GetDouble вернет значение параметра, определяемого именем
\li -> SetBoolean установит значение параметра, определяемого именем
\li -> SetInt установит значение параметра, определяемого именем
\li -> SetUInt установит значение параметра, определяемого именем
\li -> SetString установит значение параметра, определяемого именем
\li -> SetInt64 установит значение параметра, определяемого именем
\li -> SetDouble установит значение параметра, определяемого именем
\li -> GetArray вернет значение параметра, определяемого именем (вернется спсисок, типы элементов которого определяются выставляемым значением)
\li -> SetArray установит значение параметра, определяемого именем sName
\n
\n
\li	SS::Interface::Core::CommonServices::ISettingsServerEdit редактирование параметров
\li -> GetParameterList возвращает список параметров. последний - null
\li -> GetParameterType возвращает тип параметра по его имени. может установить дополнительную перемнную, является ли параметер массивом значений
\li -> AddParameter добавляет параметер
\li -> DeleteParameter удаляет параметер
\li -> GetPublicity возвращает публичность		
\li -> GetAccessibility возвращает тип доступа		
\li -> EditParameter позволяет изменить некоторый параметер целиком
\li -> SetParameterName устанавливает новое имя параметра
\li -> SetParameterPublicity устанавливает публичность
\li -> SetParameterAccessibility устанавливает тип доступа
\li -> SetParameterType устанавливает тип
\li -> SetParameterValue устанавливает значение параметра
\li -> AddParameterValue добавляет значение параметра в список
\n
\n

<b>4. ИСПОЛЬЗУЕМЫЕ ТЕХНИЧЕСКИЕ СРЕДСТВА</b>\n
Используются стандартная техническая база, на которую может быть установлена ОС Windows.

<b>5. ВЫЗОВ И ЗАГРУЗКА</b>\n
\li Загрузка модуля происходит при загрузке какого-либо класса, содержащегося в данном модуле
\li Вызов функций происходит либо напрямую (статические функции), либо после создания экземпляра необходимого класса.

<b>6. ВХОДНЫЕ ДАННЫЕ</b>\n
Имена и значения параметров

<b>7. ВЫХОДНЫЕ ДАННЫЕ</b>\n
Значения параметров

*/