
#if !defined(AFX_CLOG_H__6E5740B3_DF17_44c0_8308_04BDCF63C64A__INCLUDED_)
#define AFX_CLOG_H__6E5740B3_DF17_44c0_8308_04BDCF63C64A__INCLUDED_

#include "..\ASCInterface\services.h"

//далее идут дефайны для модуля синтаксиса
///наличие сего дефайна означает, что синтакс будет писать мессаджи
#define SYNTAX_MESSAGES_ON
///наличие сего дефайна означает, что синтакс будет писать варнинги
#define SYNTAX_WARNINGS_ON
///наличие сего дефайна означает, что синтакс будет писать ерроры
#define SYNTAX_ERRORS_ON

//далее идут дефайны для главного модуля 
///наличие сего дефайна означает, что главный модуль будет писать мессаджи
#define BROKER_MESSAGES_ON
///наличие сего дефайна означает, что главный модуль будет писать варнинги
#define BROKER_WARNINGS_ON
///наличие сего дефайна означает, что главный модуль будет писать ерроры
#define BROKER_ERRORS_ON
///наличие сего дефайна означает, что главный модуль будет писать евенты
#define BROKER_EVENTS_ON

//далее идут дефайны для модуля Морфологического словаря 
///наличие сего дефайна означает, что модуль Морфологического словаря будет писать мессаджи
#define DICTIONARY_MESSAGES_ON
///наличие сего дефайна означает, что модуль Морфологического словаря будет писать варнинги
#define DICTIONARY_WARNINGS_ON
///наличие сего дефайна означает, что модуль Морфологического словаря будет писать ерроры
#define DICTIONARY_ERRORS_ON

//далее идут дефайны для модуля Толково-семантического словаря 
///наличие сего дефайна означает, что модуль Толково-семантического словаря будет писать мессаджи
#define COSEDI_MESSAGES_ON
///наличие сего дефайна означает, что модуль Толково-семантического словаря будет писать варнинги
#define COSEDI_WARNINGS_ON
///наличие сего дефайна означает, что модуль Толково-семантического словаря будет писать ерроры
#define COSEDI_ERRORS_ON


//далее идут дефайны для модуля  поисковой индексации
///наличие сего дефайна означает, что модуль словаря будет писать мессаджи
#define INDEX_MESSAGES_ON
///наличие сего дефайна означает, что модуль словаря будет писать варнинги
#define INDEX_WARNINGS_ON
///наличие сего дефайна означает, что модуль словаря будет писать ерроры
#define INDEX_ERRORS_ON

//далее идут дефайны для модуля  сервисной индексации
///наличие сего дефайна означает, что модуль сервиса будет писать мессаджи
#define SERVICE_MESSAGES_ON
///наличие сего дефайна означает, что модуль сервиса будет писать варнинги
#define SERVICE_WARNINGS_ON
///наличие сего дефайна означает, что модуль сервиса будет писать ерроры
#define SERVICE_ERRORS_ON

//далее идут дефайны для модуля  поиска по ключевым словам
///наличие сего дефайна означает, что модуль поиска будет писать мессаджи
#define SEARCH_MESSAGES_ON
///наличие сего дефайна означает, что модуль поиска будет писать варнинги
#define SEARCH_WARNINGS_ON
///наличие сего дефайна означает, что модуль поиска будет писать ерроры
#define SEARCH_ERRORS_ON

//далее идут дефайны для модуля  поиска по ключевым словам
///наличие сего дефайна означает, что модуль поиска будет писать мессаджи
#define PROXY_MESSAGES_ON
///наличие сего дефайна означает, что модуль поиска будет писать варнинги
#define PROXY_WARNINGS_ON
///наличие сего дефайна означает, что модуль поиска будет писать ерроры
#define PROXY_ERRORS_ON

//далее идут дефайны для модуля  семантического анализа
///наличие сего дефайна означает, что модуль семантического анализа будет писать мессаджи
#define SM_MESSAGES_ON
///наличие сего дефайна означает, что модуль семантического анализа будет писать варнинги
#define SM_WARNINGS_ON
///наличие сего дефайна означает, что модуль семантического анализа будет писать ерроры
#define SM_ERRORS_ON
////////////////////////////////////////////////
///перечисление, задающее возможные виды сообщений, записываемых в лог
enum ELogMessage 
{   ///ошибка
	elmError,
	///сообщение
	elmMessage,
	///предупреждение
	elmWarning
};

namespace SS
{
namespace Core
{
namespace CommonServices
{

#define SEPARATOR L";"
#define TERMINAL_SEPARATOR L"#"

extern const int c_iSizeOfLogString;

///реализует функциональность записи в лог
class CLog
{

	///HANDLE для синхронизации потоков
	CManagerLifeTimeForCriticalSection m_CriticalSection;
	///для обеспечения хранения имени потока в отдельной памяти потока
	unsigned int m_uiIndexTLS; 
	///запись лог-сообщения szMessage на диск
	void Save(const wchar_t* wszPath, const wchar_t* wszMessage);
public:

	///запись лог-сообщения szMessage на диск
	void SaveLog(const wchar_t* wszPath, const wchar_t* wszMessage);

	///устанавливает имя пользователя, который пишет в лог
	void SetUserName(const wchar_t* wszUserName);
	CLog(void);
	~CLog(void);
};

}
}
}
#endif